// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PQRSenvio.Web.Data;

namespace PQRSenvio.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PQRSenvio.Web.Data.Entities.Case", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("account_id");

                    b.Property<int>("ans");

                    b.Property<string>("assigned_user_id")
                        .IsRequired();

                    b.Property<string>("category_id");

                    b.Property<DateTime>("created_at");

                    b.Property<string>("created_by_id");

                    b.Property<bool>("deleted");

                    b.Property<string>("detail_id");

                    b.Property<DateTime>("modified_at");

                    b.Property<string>("modified_by_id");

                    b.Property<string>("name")
                        .HasMaxLength(255);

                    b.Property<string>("theme_id");

                    b.HasKey("Id");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("PQRSenvio.Web.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Is_Active");

                    b.Property<DateTime>("created_at");

                    b.Property<string>("created_by_id");

                    b.Property<bool>("deleted");

                    b.Property<string>("description")
                        .HasMaxLength(500);

                    b.Property<DateTime>("modified_at");

                    b.Property<string>("modified_by_id");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PQRSenvio.Web.Data.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at");

                    b.Property<string>("created_by_id");

                    b.Property<bool>("deleted");

                    b.Property<string>("description")
                        .HasMaxLength(500);

                    b.Property<bool>("is_active");

                    b.Property<DateTime>("modified_at");

                    b.Property<string>("modified_by_id");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("PQRSenvio.Web.Data.Entities.Configuration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<int>("ans");

                    b.Property<DateTime>("created_at");

                    b.Property<string>("created_by_id");

                    b.Property<bool>("deleted");

                    b.Property<bool>("is_active");

                    b.Property<DateTime>("modified_at");

                    b.Property<string>("modified_by_id");

                    b.Property<string>("name");

                    b.HasKey("id");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("PQRSenvio.Web.Data.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at");

                    b.Property<string>("created_by_id");

                    b.Property<bool>("deleted");

                    b.Property<string>("description")
                        .HasMaxLength(500);

                    b.Property<bool>("is_active");

                    b.Property<DateTime>("modified_at");

                    b.Property<string>("modified_by_id");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("PQRSenvio.Web.Data.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desription")
                        .HasMaxLength(500);

                    b.Property<DateTime>("created_at");

                    b.Property<string>("created_by_id");

                    b.Property<bool>("deleted");

                    b.Property<bool>("is_active");

                    b.Property<DateTime>("modified_at");

                    b.Property<string>("modified_by_id");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("PQRSenvio.Web.Data.Entities.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created_at");

                    b.Property<string>("created_by_id");

                    b.Property<bool>("deleted");

                    b.Property<string>("description")
                        .HasMaxLength(500);

                    b.Property<bool>("is_active");

                    b.Property<DateTime>("modified_at");

                    b.Property<string>("modified_by_id");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("PQRSenvio.Web.Data.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityId");

                    b.Property<int?>("CountryId");

                    b.Property<DateTime>("Created_at");

                    b.Property<int?>("StateId");

                    b.Property<string>("created_by_id");

                    b.Property<bool>("deleted");

                    b.Property<string>("description")
                        .HasMaxLength(500);

                    b.Property<bool>("is_active");

                    b.Property<DateTime>("modified_at");

                    b.Property<string>("modified_by_id");

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("PQRSenvio.Web.Data.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<DateTime>("created_at");

                    b.Property<string>("created_by_id");

                    b.Property<bool>("deleted");

                    b.Property<bool>("is_active");

                    b.Property<DateTime>("modified_at");

                    b.Property<string>("modified_by_id");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Themes");
                });

            modelBuilder.Entity("PQRSenvio.Web.Data.Location", b =>
                {
                    b.HasOne("PQRSenvio.Web.Data.Entities.City", "City")
                        .WithMany("Locations")
                        .HasForeignKey("CityId");

                    b.HasOne("PQRSenvio.Web.Data.Entities.Country", "Country")
                        .WithMany("locations")
                        .HasForeignKey("CountryId");

                    b.HasOne("PQRSenvio.Web.Data.Entities.State", "State")
                        .WithMany("Locations")
                        .HasForeignKey("StateId");
                });
#pragma warning restore 612, 618
        }
    }
}
